// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigrationComp;

#nullable disable

namespace MigrationComp.Migrations
{
    [DbContext(typeof(CompanyDB))]
    partial class CompanyDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MigrationComp.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("MigrationComp.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Position", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Managment",
                            Phone = "45-85-96"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Programing",
                            Phone = "45-85-05"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Design",
                            Phone = "45-79-35"
                        });
                });

            modelBuilder.Entity("MigrationComp.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LaunchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LaunchDate = new DateTime(1992, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tetris"
                        },
                        new
                        {
                            Id = 2,
                            LaunchDate = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CS"
                        },
                        new
                        {
                            Id = 3,
                            LaunchDate = new DateTime(1999, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PacMan"
                        });
                });

            modelBuilder.Entity("MigrationComp.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(2003, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            DepartmentID = 1,
                            Email = "noemail",
                            Name = "Bill",
                            Salary = 2700,
                            Surname = "Gates"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(2002, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 2,
                            DepartmentID = 2,
                            Email = "noemail",
                            Name = "Tomm",
                            Salary = 4300,
                            Surname = "Page"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(2000, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 2,
                            DepartmentID = 1,
                            Email = "noemail",
                            Name = "Emma",
                            Salary = 5500,
                            Surname = "Miller"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(2003, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 3,
                            DepartmentID = 3,
                            Email = "noemail",
                            Name = "Oleg",
                            Salary = 3300,
                            Surname = "King"
                        });
                });

            modelBuilder.Entity("ProjectWorker", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("WorkersId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "WorkersId");

                    b.HasIndex("WorkersId");

                    b.ToTable("ProjectWorker");
                });

            modelBuilder.Entity("MigrationComp.Entities.Worker", b =>
                {
                    b.HasOne("MigrationComp.Entities.Country", "Country")
                        .WithMany("Workers")
                        .HasForeignKey("CountryId");

                    b.HasOne("MigrationComp.Entities.Department", "Department")
                        .WithMany("Workers")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ProjectWorker", b =>
                {
                    b.HasOne("MigrationComp.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MigrationComp.Entities.Worker", null)
                        .WithMany()
                        .HasForeignKey("WorkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MigrationComp.Entities.Country", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("MigrationComp.Entities.Department", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
